package com.wang.db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;

public class SqlTest {
	String dbUrl = "jdbc:postgresql://127.0.0.1:5432/";
	String dbName = "postgres";
	String user = "postgres";
	String psw = "postgres";
	Connection con = null;
	PreparedStatement ps = null;
	Statement statemens = null;
	ResultSet result = null;

	public static void main(String[] args) {
		SqlTest st = new SqlTest();
		try {
			st.init();
			// 传递列名 取得插入后的更新数据
//			st.runUpdateReturn();
			// 语句后加RETURNING(不支持Batch)
//			st.runUpdateReturn2();
			// 设置autoGeneratedKeys参数
//			st.runUpdateReturn3();
			// 设置resultSetType和resultSetConcurrency参数(不支持Batch)
//			st.runUpdateReturn4();
			// ResultSetMetaData取得表格创建情报
			st.runUpdateReturnTableInfo();
			System.out.println("run successed.");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	// Batch 提交insert 通过生成prepareStatement时传递列名 取得插入后的更新数据
	public void runUpdateReturn() throws SQLException {
		String sql = "INSERT INTO tbl_user (name, age) VALUES (?,?)";
		ps = con.prepareStatement(sql, new String[] { "id", "name", "age" });
		ps.setString(1, "li");
		ps.setInt(2, 2);
		ps.addBatch();
		ps.setString(1, "li2");
		ps.setInt(2, 22);
		ps.addBatch();
		ps.executeBatch();
		result = ps.getGeneratedKeys();
		while (result.next()) {
			System.out.println(result.getInt("id") + "--" + result.getString("name") + "--" + result.getInt("age"));
		}
	}

	// 在SQL语句后加RETURNING 关键字 插入后取得插入结果
	public void runUpdateReturn2() throws SQLException {
		String sql = "INSERT INTO tbl_user (name, age) VALUES (?,?) RETURNING id, name, age";
		ps = con.prepareStatement(sql);
		ps.setString(1, "wang");
		ps.setInt(2, 3);
		if (ps.execute()) {
			result = ps.getResultSet();
			while (result.next()) {
				System.out.println(result.getInt("id") + "--" + result.getString("name") + "--" + result.getInt("age"));
			}
		}
	}

	// Batch 提交insert 通过生成prepareStatement时设置autoGeneratedKeys参数 取得插入后的更新数据
	public void runUpdateReturn3() throws SQLException {
		String sql = "INSERT INTO tbl_user (name, age) VALUES (?,?) RETURNING id, name, age";
		ps = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		ps.setString(1, "li");
		ps.setInt(2, 2);
		ps.addBatch();
		ps.setString(1, "li2");
		ps.setInt(2, 22);
		ps.addBatch();
		int[] executeBatch = ps.executeBatch();
		System.out.println("execute count : " + executeBatch);
		result = ps.getGeneratedKeys();
		while (result.next()) {
			System.out.println(result.getInt("id") + "--" + result.getString("name") + "--" + result.getInt("age"));
		}
	}

	// 提交insert 通过生成prepareStatement时设置resultSetType和resultSetConcurrency参数
	// 取得插入后的更新数据
	public void runUpdateReturn4() throws SQLException {
		String sql = "INSERT INTO tbl_user (name, age) VALUES (?,?) RETURNING id, name, age";
		ps = con.prepareStatement(sql, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
		ps.setString(1, "wang");
		ps.setInt(2, 4);
		if (ps.execute()) {
			result = ps.getResultSet();
			while (result.next()) {
				System.out.println(result.getInt("id") + "--" + result.getString("name") + "--" + result.getInt("age"));
			}
		}
	}

	// ResultSetMetaData取得表格创建情报
	public void runUpdateReturnTableInfo() throws SQLException {
		String sql = "INSERT INTO tbl_user (name, age) VALUES (?,?) RETURNING id, name, age";
		ps = con.prepareStatement(sql);
		ps.setString(1, "wang");
		ps.setInt(2, 5);
		result = ps.executeQuery();
		ResultSetMetaData metaData = result.getMetaData();
		for (int i = 1; i < metaData.getColumnCount(); i++) {
			System.out.println(metaData.getColumnName(i) + "--" + metaData.getColumnType(i));
		}
	}

	// 建立链接
	public void init() throws ClassNotFoundException, SQLException {
		Class.forName("org.postgresql.Driver");
		con = DriverManager.getConnection(dbUrl + dbName, user, psw);
		statemens = con.createStatement();
	}
}
